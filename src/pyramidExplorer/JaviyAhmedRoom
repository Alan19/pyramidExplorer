package pyramidExplorer;

import java.util.Arrays;

public class JaviyAhmedRoom extends CaveRoomPd8 {
	
	private int[][] playerBoard;
	private int[][] compBoard;
	private String[][] playerBoardString;
	private String[][] compBoardString;
	
	private static final int BOAT1 = 1;
	private static final int BOAT2 = 2;
	private static final int BOAT3 = 3;
	private static final int BOAT4 = 4;
	private static final int BOAT5 = 5;
	private static final int BOAT6 = 6;
	

	public JaviyAhmedRoom(String description) {
		super(description);
		setBoards();
	}
	
	
	private void setBoards() {
		playerBoard = new int[10][10];
		compBoard = new int[10][10];
		
		playerBoardString = new String[10][10];
		compBoardString = new String[10][10];
		
//		for(int a = 0;a<playerBoardString[0].length;a++){
//			playerBoardString[0][a] = "A"+(a+1)+".";
//		}
		for(int row = 0;row<playerBoardString.length;row++){
			for(int col = 0;col<playerBoardString[0].length;col++){
				if(playerBoard[row][col] == 0){
					playerBoardString[row][col] = "[ ]";
				}else if(playerBoard[row][col] == 1){
					playerBoardString[row][col] = "[O]";
				}else{
					playerBoardString[row][col] = "[X]";
				}
			}
		}
		
		for(String[] row:playerBoardString){
			for(String col:row){
				System.out.println(col);
			}
		}
	}

	public void enter(){
		super.enter();
		System.out.println(" ");
	}
	
	public void interpretAction(String input) {
		input = input.toLowerCase();
		while(!isValid(input)){
			CaveExplorer.print("Please enter 'w', 'a', 's', or 'd'.");
			input = CaveExplorer.in.nextLine().toLowerCase();
		}
		String[] keys = {"w", "d", "s", "a"};
		int indexFound = -1;
		for (int i = 0; i < keys.length; i++) {
			if (keys[i].equals(input)) {
				indexFound = i;
				break;
			}
		}
//		if(borderingRooms[indexFound] != null && doors[indexFound] != null && doors[indexFound].isOpen()){
//			CaveExplorer.currentRoom.leave();
//			CaveExplorer.currentRoom = borderingRooms[indexFound];
//			CaveExplorer.currentRoom.enter();
//			CaveExplorer.inventory.updateMap();
//		}
	}

	public static boolean isValid(String input) {
		String[] keys = {"w", "d", "s", "a"};
		for (String key : keys) {
			if(input.equals(key)) return true;
		}
		return false;
	}

}
